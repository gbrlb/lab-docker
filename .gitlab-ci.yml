image: docker:latest

# When using dind, it's wise to use the overlayfs driver for
# improved performance.
variables:
  DOCKER_DRIVER: overlay2
  CACHE_ON: "false"
#  GIT_STRATEGY: clone
#  REGISTRY: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
  REGISTRY: server-harbor:80
  RELEASE: latest
  LOCAL_BUILD: "false"
  DOCKER_TLS_CERTDIR: ""

stages:
  - test
  - build-one
  - build-two
  - build-three
  - build-four

services: # Note the hardcoded registry name...
  - name: docker:dind
    command: ["--insecure-registry=server-harbor:80"]

before_script:
  - apk update && apk add bash
  - echo -n $DLS2_HARBOR_TOKEN | docker login -u 'robot$gitlab' --password-stdin $REGISTRY
  - docker info

# Test if the registry is up and running
test:
  stage: test
  tags:
    - dls2
  script:
  - docker pull alpine
  - docker tag alpine $REGISTRY/dls2/alpine:$RELEASE
  - docker push $REGISTRY/dls2/alpine:$RELEASE
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[skip-test\]/

build-env:
  stage: build-one
  script:
    - ./build_docker.sh dls2-env $CACHE_ON $RELEASE $LOCAL_BUILD
    - docker tag dls2-env $REGISTRY/dls2/dls2-env:$RELEASE
    - docker push $REGISTRY/dls2/dls2-env:$RELEASE
  tags:
    - dls2
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[skip-one\]/

build-env-nvidia:
  stage: build-one
  script:
    - ./build_docker.sh dls2-env-nvidia $CACHE_ON $RELEASE $LOCAL_BUILD
    - docker tag dls2-env-nvidia $REGISTRY/dls2/dls2-env-nvidia:$RELEASE
    - docker push $REGISTRY/dls2/dls2-env-nvidia:$RELEASE
  tags:
    - dls2
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[skip-one\]/

build-dev:
  stage: build-two
  script:
    - ./build_docker.sh dls2-dev $CACHE_ON $RELEASE $LOCAL_BUILD
    - docker tag dls2-dev $REGISTRY/dls2/dls2-dev:$RELEASE
    - docker push $REGISTRY/dls2/dls2-dev:$RELEASE
  tags:
    - dls2
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[skip-two\]/

build-dev-nvidia:
  stage: build-two
  script:
    - ./build_docker.sh dls2-dev-nvidia $CACHE_ON $RELEASE $LOCAL_BUILD
    - docker tag dls2-dev-nvidia $REGISTRY/dls2/dls2-dev-nvidia:$RELEASE
    - docker push $REGISTRY/dls2/dls2-dev-nvidia:$RELEASE
  tags:
    - dls2
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[skip-two\]/

build-framework-dev:
  stage: build-three
  script:
    - ./build_docker.sh dls2-framework-dev $CACHE_ON $RELEASE $LOCAL_BUILD
    - docker tag dls2-framework-dev $REGISTRY/dls2/dls2-framework-dev:$RELEASE
    - docker push $REGISTRY/dls2/dls2-framework-dev:$RELEASE
  tags:
    - dls2
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[skip-three\]/

build-framework-dev-nvidia:
  stage: build-three
  script:
    - ./build_docker.sh dls2-framework-dev-nvidia $CACHE_ON $RELEASE $LOCAL_BUILD
    - docker tag dls2-framework-dev-nvidia $REGISTRY/dls2/dls2-framework-dev-nvidia:$RELEASE
    - docker push $REGISTRY/dls2/dls2-framework-dev-nvidia:$RELEASE
  tags:
    - dls2
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[skip-three\]/

build-plugin-dev:
  stage: build-three
  script:
    - ./build_docker.sh dls2-plugin-dev $CACHE_ON $RELEASE $LOCAL_BUILD
    - docker tag dls2-plugin-dev $REGISTRY/dls2/dls2-plugin-dev:$RELEASE
    - docker push $REGISTRY/dls2/dls2-plugin-dev:$RELEASE
  tags:
    - dls2
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[skip-three\]/

build-plugin-dev-nvidia:
  stage: build-three
  script:
    - ./build_docker.sh dls2-plugin-dev-nvidia $CACHE_ON $RELEASE $LOCAL_BUILD
    - docker tag dls2-plugin-dev-nvidia $REGISTRY/dls2/dls2-plugin-dev-nvidia:$RELEASE
    - docker push $REGISTRY/dls2/dls2-plugin-dev-nvidia:$RELEASE
  tags:
    - dls2
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[skip-three\]/

build-hal-dev:
  stage: build-three
  script:
    - echo "Skipping build"
  tags:
    - dls2
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[skip-three\]/

build-trunk:
  stage: build-four
  script:
    - ./build_docker.sh dls2-plugin-trunk-dev $CACHE_ON $RELEASE $LOCAL_BUILD
    - docker tag dls2-plugin-trunk-dev $REGISTRY/dls2/dls2-plugin-trunk-dev:$RELEASE
    - docker push $REGISTRY/dls2/dls2-plugin-trunk-dev:$RELEASE
  tags:
    - dls2
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[skip-four\]/

build-trunk-nvidia:
  stage: build-four
  script:
    - ./build_docker.sh dls2-plugin-trunk-dev-nvidia $CACHE_ON $RELEASE $LOCAL_BUILD
    - docker tag dls2-plugin-trunk-dev-nvidia $REGISTRY/dls2/dls2-plugin-trunk-dev-nvidia:$RELEASE
    - docker push $REGISTRY/dls2/dls2-plugin-trunk-dev-nvidia:$RELEASE
  tags:
    - dls2
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[skip-four\]/

build-operator:
  stage: build-four
  script:
    - ./build_docker.sh dls2-operator $CACHE_ON $RELEASE $LOCAL_BUILD
    - docker tag dls2-operator $REGISTRY/dls2/dls2-operator:$RELEASE
    - docker push $REGISTRY/dls2/dls2-operator:$RELEASE
  tags:
    - dls2
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[skip-four\]/

build-operator-nvidia:
  stage: build-four
  script:
    - ./build_docker.sh dls2-operator-nvidia $CACHE_ON $RELEASE $LOCAL_BUILD
    - docker tag dls2-operator-nvidia $REGISTRY/dls2/dls2-operator-nvidia:$RELEASE
    - docker push $REGISTRY/dls2/dls2-operator-nvidia:$RELEASE
  tags:
    - dls2
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[skip-four\]/

#build-xenomai:
#  stage: build-two
#  script:
#  - ./build_docker.sh dls2-xenomai $CACHE_ON $RELEASE $LOCAL_BUILD
#  - ./push_docker.sh dls2-xenomai $REGISTRY $RELEASE
#  tags:
#    - dls2
